trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Terraform
  jobs:
  - job: Terraform
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.9.5'  # Specify the Terraform version you want to use

    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'AzureServiceConnection'  # Name of your service connection
        backendAzureRmResourceGroupName: '$(backendResourceGroupName)'
        backendAzureRmStorageAccountName: '$(backendStorageAccountName)'
        backendAzureRmContainerName: '$(backendContainerName)'
        backendAzureRmKey: '$(backendKey)'
        commandOptions: '-migrate-state'

    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'AzureServiceConnection'  # Name of your service connection
        commandOptions: '-out=tfplan'

    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'apply'
        environmentServiceNameAzureRM: 'AzureServiceConnection'  # Name of your service connection
        commandOptions: '-auto-approve tfplan'
